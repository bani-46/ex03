[INFO]Open File.
program assigninteger     var 
[PARSE_ERROR][Parse_program]';' is not found.
[Result]Search end of line:2.
[INFO]Close File.[INFO]Open File.
program assignboolean ;
    var x y 
[PARSE_ERROR][Variable_declation]':' is not found.

[PARSE_ERROR][Block]Compound_statement is not found.
[INFO]Block Final read:'NAME'
[Result]Search end of line:2.
[INFO]Close File.[INFO]Open File.
program assignchar ;
    var x , y : char ;
;

[PARSE_ERROR][Block]Compound_statement is not found.
[INFO]Block Final read:';'
[Result]Search end of line:2.
[INFO]Close File.[INFO]Open File.
program Write ;
begin
    ;
    writeln ( 'It' s 
[PARSE_ERROR][Output_statement]',' is not found.

[PARSE_ERROR][Compound_Statement]Statement is not found.

[PARSE_ERROR][Block]Compound_statement is not found.
[INFO]Block Final read:'NAME'
[Result]Search end of line:3.
[INFO]Close File.[INFO]Open File.
program ifst ;
    var ch : char ;
begin
    readln ( ch ) ;
    if ch = 'a' then writeln ( 'It is ''a'' ' ) ;
    
    else 
[PARSE_ERROR][Compound_Statement]Statement is not found.

[PARSE_ERROR][Block]Compound_statement is not found.
[INFO]Block Final read:'else'
[Result]Search end of line:6.
[INFO]Close File.[INFO]Open File.
program whilest ;
    var n , i , sum : integer ;
begin
    readln ( n ) ;
    i := n ;
    sum := 0 ;
    while ( i > 0 ) do begin
        sum := sum + i ;
        i := i - 1 
    end ;
    writeln ( 'Summention of 1 - ' , n , '  is ' , sum ) 
end .

[Result]Final read:EOF
[Result]Search end of line:12.
[INFO]Close File.[INFO]Open File.
program TeaBreak ;
begin
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    writeln ( 'Say "BREAK!!" ' ) ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    ;
    break 
[PARSE_ERROR][Exit_statement]Found 'break' but not iteration.

[PARSE_ERROR][Compound_Statement]Statement is not found.

[PARSE_ERROR][Block]Compound_statement is not found.
[INFO]Block Final read:'break'
[Result]Search end of line:10.
[INFO]Close File.[INFO]Open File.
program assigninteger ;
    var n : integer ;
begin
    n := 1 
end .

[Result]Final read:EOF
[Result]Search end of line:2.
[INFO]Close File.[INFO]Open File.
program assignboolean ;
    var x , y : boolean ;
begin
    x := true ;
    y := false ;
    
end .

[Result]Final read:EOF
[Result]Search end of line:11.
[INFO]Close File.[INFO]Open File.
program assignchar ;
    var x , y : char ;
begin
    x := 'X' ;
    y := 'Y' 
end .

[Result]Final read:EOF
[Result]Search end of line:4.
[INFO]Close File.[INFO]Open File.
program Write ;
begin
    writeln ( 'It''s OK?' ) 
end .

[Result]Final read:EOF
[Result]Search end of line:2.
[INFO]Close File.[INFO]Open File.
program ifst ;
    var ch : char ;
begin
    readln ( ch ) ;
    if ch = 'a' then writeln ( 'It is ''a'' ' ) 
    else writeln ( 'It is not ''a'' ' ) 
end .

[Result]Final read:EOF
[Result]Search end of line:9.
[INFO]Close File.[INFO]Open File.
program whilest ;
    var n , i , sum : integer ;
begin
    readln ( n ) ;
    i := n ;
    sum := 0 ;
    while i > 0 do begin
        sum := sum + i ;
        i := i - 1 
    end ;
    writeln ( 'Summention of 1 - ' , n , '  is ' , sum ) 
end .

[Result]Final read:EOF
[Result]Search end of line:13.
[INFO]Close File.[INFO]Open File.
program nwhilest ;
    var i , j , k : integer ;
begin
    i := 1 ;
    while i < 10 do begin
        j := 1 ;
        while j < 10 do begin
            k := 1 ;
            while k < 10 do begin
                if ( k div 2 ) * 2 = k then begin
                    k := k + 1 
                end 
                else begin
                    k := k + 1 
                end 
            end ;
            j := j + 1 ;
            
        end ;
        i := i + 1 
    end ;
    writeln ( 'All End' ) 
end .

[Result]Final read:EOF
[Result]Search end of line:17.
[INFO]Close File.[INFO]Open File.
program sample28p ;
    procedure p ;
    begin
        writeln ( 'Hello!' ) 
    end ;
    procedure q ;
    begin
        writeln ( 'Everyone!' ) 
    end ;
begin
    call p ;
    call q 
end .

[Result]Final read:EOF
[Result]Search end of line:4.
[INFO]Close File.[INFO]Open File.
program sample29 ;
    var unused1 : integer ;UnusedArrayForTest : array [ 200 ] of char ;
    procedure gcmlcm ( m , n , gc , lc : integer ) ;
        var a , b , r : integer ;
    begin
        a := m ;
        b := n ;
        while b <> 0 do begin
            r := a - ( a div b ) * b ;
            a := b ;
            b := r 
        end ;
        gc := a ;
        lc := ( m div gc ) * n 
    end ;
    procedure abs ( a , b : integer ) ;
    begin
        if a < 0 then b := - a 
        else b := a 
    end ;
    procedure gcm ( a , b , gc : integer ) ;
        var lc , aa , bb : integer ;
    begin
        if ( a = 0 ) or ( b = 0 ) then gc := 1 
        else begin
            call abs ( a , aa ) ;
            call abs ( b , bb ) ;
            call gcmlcm ( aa , bb , gc , lc ) 
        end 
    end ;
    procedure lcm ( a , b , lc : integer ) ;
        var gc , aa , bb : integer ;
    begin
        if ( a = 0 ) or ( b = 0 ) then lc := 1 
        else begin
            call abs ( a , aa ) ;
            call abs ( b , bb ) ;
            call gcmlcm ( aa , bb , gc , lc ) 
        end 
    end ;
    var unusedchar : char ;
    procedure reduce ( a1 , a2 : integer ) ;
        var gc : integer ;
    begin
        if a1 = 0 then begin
            a2 := 1 ;
            return 
        end ;
        if a2 = 0 then begin
            a1 := 1 ;
            return 
        end ;
        if a2 < 0 then begin
            a1 := - a1 ;
            a2 := - a2 
        end ;
        call gcm ( a1 , a2 , gc ) ;
        a1 := a1 div gc ;
        a2 := a2 div gc 
    end ;
    procedure sum ( x1 , x2 , y1 , y2 : integer ) ;
        var lc , y11 : integer ;
    begin
        call lcm ( x2 , y2 , lc ) ;
        x1 := x1 * ( lc div x2 ) ;
        y11 := y1 * ( lc div y2 ) ;
        x1 := x1 + y11 ;
        x2 := lc ;
        call reduce ( x1 , x2 ) 
    end ;
    procedure sub ( x1 , x2 , y1 , y2 : integer ) ;
        var lc , y11 : integer ;
    begin
        call sum ( x1 , x2 , - y1 , y2 ) 
    end ;
    procedure mult ( x1 , x2 , y1 , y2 : integer ) ;
        var gc , y22 , y11 : integer ;
    begin
        call gcm ( x1 , y2 , gc ) ;
        x1 := x1 div gc ;
        y22 := y2 div gc ;
        call gcm ( x2 , y1 , gc ) ;
        x2 := x2 div gc ;
        y11 := y1 div gc ;
        x1 := x1 * y11 ;
        x2 := x2 * y22 ;
        call reduce ( x1 , x2 ) 
    end ;
    procedure divide ( x1 , x2 , y1 , y2 : integer ) ;
    begin
        call mult ( x1 , x2 , y2 , y1 ) 
    end ;
    var unusedarray : array [ 100 ] of char ;
    procedure printfinal ( a , b : integer ) ;
    begin
        if a = 0 then writeln ( 'Final Result =' , a ) 
        else if b = 1 then writeln ( 'Final Result =' , a ) 
        else writeln ( 'Final Result =' , a , '/' , b ) 
    end ;
    procedure printtemp ( a , b : integer ) ;
    begin
        if a = 0 then writeln ( 'Temporary Result =' , a ) 
        else if b = 1 then writeln ( 'Temporary Result =' , a ) 
        else writeln ( 'Temporary Result =' , a , '/' , b ) 
    end ;
    var x1 , x2 , y1 , y2 : integer ;
    var com : char ;endflag : boolean ;
begin
    writeln ( '   *** Calculator -- h for help ***' ) ;
    x1 := 0 ;
    x2 := 1 ;
    endflag := false ;
    while not endflag do begin
        writeln ( ' Please input command :' ) ;
        readln ( com , y1 ) ;
        y2 := 1 ;
        if ( com = 'c' ) or ( com = 'C' ) then begin
            x1 := y1 ;
            x2 := y2 
        end 
        else if com = '+' then call sum ( x1 , x2 , y1 , y2 ) 
        else if com = '-' then call sub ( x1 , x2 , y1 , y2 ) 
        else if com = '*' then call mult ( x1 , x2 , y1 , y2 ) 
        else if com = '/' then call divide ( x1 , x2 , y1 , y2 ) 
        else if ( com = 'o' ) or ( com = 'O' ) then endflag := true 
        else begin
            writeln ;
            writeln ( 'Calculator Usage:' ) ;
            writeln ( '  c number : clear & set it' ) ;
            writeln ( '  + number : add it' ) ;
            writeln ( '  - number : subtract it' ) ;
            writeln ( '  * number : multiply it' ) ;
            writeln ( '  / number : divide by it' ) ;
            writeln ( '  o        : off(terminate execution)' ) ;
            writeln 
        end ;
        if endflag then call printfinal ( x1 , x2 ) 
        else call printtemp ( x1 , x2 ) 
    end 
end .

[Result]Final read:EOF
[Result]Search end of line:138.
[INFO]Close File.[INFO]Open File.
program change ;
    var n , count : integer ;
begin
    writeln ( 'please input change' ) ;
    readln ( n ) ;
    count := 0 ;
    while n > 0 do begin
        while n >= 10 do begin
            while n >= 100 do begin
                while n >= 1000 do begin
                    while n >= 10000 do begin
                        count := count + 1 ;
                        n := n - 10000 ;
                        
                    end ;
                    if count > 0 then writeln ( '10000 yen : ' , count ) ;
                    count := 0 ;
                    if n < 1000 then break ;
                    count := count + 1 ;
                    n := n - 1000 ;
                    
                end ;
                if count > 0 then writeln ( ' 1000 yen : ' , count ) ;
                count := 0 ;
                if n < 100 then break ;
                count := count + 1 ;
                n := n - 100 ;
                
            end ;
            if count > 0 then writeln ( '  100 yen : ' , count ) ;
            count := 0 ;
            if n < 10 then break ;
            count := count + 1 ;
            n := n - 10 ;
            
        end ;
        if count > 0 then writeln ( '   10 yen : ' , count ) ;
        count := 0 ;
        if n < 1 then break ;
        count := count + 1 ;
        n := n - 1 ;
        
    end ;
    if count > 0 then writeln ( '    1 yen : ' , count ) ;
    
end .

[Result]Final read:EOF
[Result]Search end of line:35.
[INFO]Close File.